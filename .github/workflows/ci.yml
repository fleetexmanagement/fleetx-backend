name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_ENV: test

jobs:
  # Code Quality & Testing
  test:
    name: Test & Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # For better changelog/versioning
      
      - name: 🏗️ Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: 📦 Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-
      
      - name: 🔧 Install dependencies
        run: bun install --frozen-lockfile
      
      - name: 🎨 Check code style
        run: bun run lint
      
      - name: 📝 Type check
        run: bun run type-check
      
      - name: 🧪 Run tests
        run: bun test
      
      - name: 📊 Generate coverage report
        run: bun run test:coverage
      
      - name: 📤 Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: coverage/
          retention-days: 7

  # Docker Build (for local development reference)
  docker-build:
    name: Docker Build Verification
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: 🏗️ Build Docker image (no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: fleetx-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: ✅ Docker build successful
        run: echo "Docker image built successfully for local development reference"

  # Commit Message Validation (for PRs)
  commitlint:
    name: Validate Commit Messages
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: 🏗️ Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: 🔧 Install dependencies
        run: bun install --frozen-lockfile
      
      - name: 📝 Validate commit messages
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose
